<?xml version="1.0" encoding="utf-8"?><string>&lt;p&gt;目前开放OAuth2互联接口比较常用的有新浪微博，腾讯QQ，淘宝，其实还有微信，只是微信的我木有申请下来，因为手续麻烦，貌似需要扫描它的协议签字然后发过去，所以就放弃封装微信OAuth2登陆接口了，待以后给补上！关于淘宝OAuth网站接入登陆目前淘宝是暂停审核了貌似，也许是因为财大气粗比较任性吧，不过你还是可申请账号的，可以做应用提交给淘宝。&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;需要源代码的小伙伴请&lt;a title="OpenPlatformOAuth2.NET" href="https://github.com/sanxia/OpenPlatformOAuth2.NET" target="_blank"&gt;猛戳这里下载&lt;/a&gt;，需要已经编译好Dll的小伙伴请&lt;a title="GeRenXing.OpenPlatform.rar" href="http://files.cnblogs.com/CHONGCHONG2008/GeRenXing.OpenPlatform.rar" target="_blank"&gt;猛戳这里下载&lt;/a&gt;。&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 18px;"&gt;一。 下面给出各个OAuth2.0申请合作的地址：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&#xD;
&lt;p&gt;&lt;span style="font-size: 14px; color: #0000ff;"&gt;&lt;strong&gt;-- sinaweibo OAuth2.0 --&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&#xD;
&lt;p&gt;申请接入OAuth2合作地址：http://open.weibo.com （微博.开放平台）&lt;br /&gt;授权Url: https://api.weibo.com/oauth2/authorize?client_id=你的ClientId&amp;amp;redirect_uri=你的回调Url&amp;amp;response_type=code&amp;amp;display=default%20&amp;amp;state=sinaweibo&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size: 14px; background-color: #ffffff; color: #0000ff;"&gt;&lt;strong&gt;-- qq OAuth2.0 --&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&#xD;
&lt;p&gt;申请接入OAuth2合作地址： http://connect.qq.com （所谓的QQ互联，貌似还有一个http://open.qq.com，但这个我还木有用过，就先用QQ互联吧反正是可以登陆）&lt;br /&gt;授权Url: http://openapi.qzone.qq.com/oauth/show?which=Login&amp;amp;display=pc&amp;amp;client_id=你的ClientId&amp;amp;redirect_uri=你的回调Url&amp;amp;response_type=code&amp;amp;display=default%20&amp;amp;state=qq&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size: 14px; color: #0000ff;"&gt;&lt;strong&gt;-- taobao OAuth2.0 --&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&#xD;
&lt;p&gt;申请接入OAuth2合作地址：http://open.taobao.com/index.htm&lt;br /&gt;授权Url: https://oauth.taobao.com/authorize?client_id=你的ClientId&amp;amp;redirect_uri=你的回调Url&amp;amp;response_type=code&amp;amp;display=default%20&amp;amp;state=taobao&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&#xD;
&lt;p&gt;&lt;span style="color: #0000ff;"&gt;&lt;strong&gt;-- WeiXin OAuth2.0 --&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&#xD;
&lt;p&gt;申请接入OAuth2合作地址：https://open.weixin.qq.com &lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;下面开始给dotNET平台的小伙伴们发福利啦，封装了一个类实现了接入到新浪微博，腾讯QQ，淘宝，和获取用户信息，就实现了下面的2个接口，分别是IOAuthClient和IUserInterface。&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;div class="cnblogs_Highlighter"&gt;&#xD;
&lt;pre class="brush:csharp;gutter:true;"&gt;namespace GeRenXing.OpenPlatform&#xD;
{&#xD;
    public interface IOAuthClient&#xD;
    {&#xD;
        AuthOption Option { get; }&#xD;
        AuthToken Token { get; }&#xD;
        IUserInterface User { get; }&#xD;
&#xD;
        String GetAuthorizeUrl(ResponseType responseType);&#xD;
        AuthToken GetAccessTokenByAuthorizationCode(string code);&#xD;
        AuthToken GetAccessTokenByPassword(string passport, string password);&#xD;
        AuthToken GetAccessTokenByRefreshToken(string refreshToken);&#xD;
        String Get(String url, params RequestOption[] options);&#xD;
        String Post(String url, params RequestOption[] options);&#xD;
    }&#xD;
}&#xD;
&lt;/pre&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;div class="cnblogs_Highlighter"&gt;&#xD;
&lt;pre class="brush:csharp;gutter:true;"&gt;namespace GeRenXing.OpenPlatform&#xD;
{&#xD;
    public interface IUserInterface&#xD;
    {&#xD;
        dynamic GetUserInfo();&#xD;
        void EndSession();&#xD;
    }&#xD;
}&#xD;
&lt;/pre&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;需要封装更多api的请自行扩展，也可以直接调用IOAuthClient的Get和Post方法直接传递参数快速访问api。&lt;br /&gt;新浪微博和淘宝在获取Token的时候就把OpenId直接返回给你了，而腾讯QQ的OAuth2.0接入里获取Token是不会返回OpenId的，需要单独访问https://graph.qq.com/oauth2.0/me获取OpenId，对于这个不同点我在封装的腾讯QQ ParseAccessToken 方法里面已经自动处理了，就是再次发起了一次获取用户Open Id的请求。&lt;br /&gt;&lt;br /&gt;各位小伙伴注意啦：访问授权Url返回的Code码只能使用一次，否则会报下面这个错误：&lt;br /&gt;{"error":"invalid_grant","error_code":21325,"request":"/oauth2/access_token","error_uri":"/oauth2/access_token","error_description":"invalid authorization code:2c2cb4e1f6b70650acbe1dad757ea6bb"}&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&#xD;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 16px;"&gt;二。 下面做了个测试的控制台程序，ClientId和ClientSecret，CallbackUrl请改为自己的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&#xD;
&lt;div class="cnblogs_Highlighter"&gt;&#xD;
&lt;pre class="brush:csharp;gutter:true;"&gt;using System;&#xD;
using System.Collections.Generic;&#xD;
using System.Linq;&#xD;
using System.Text;&#xD;
using System.Diagnostics;&#xD;
&#xD;
using GeRenXing.OpenPlatform;&#xD;
&#xD;
namespace GeRenXing.OpenPlatform.Test&#xD;
{&#xD;
    class Program&#xD;
    {&#xD;
        private static Dictionary&amp;lt;String, IOAuthClient&amp;gt; m_oauthClients;&#xD;
        static void Main(string[] args)&#xD;
        {&#xD;
            //初始化开放平台客户端（请替换成自己的ClientId，ClientScrert，CallbackUrl）&#xD;
            m_oauthClients = new Dictionary&amp;lt;string, IOAuthClient&amp;gt;();&#xD;
            m_oauthClients["sinaweibo"] = new OpenPlatform.OAuthClient.SinaWeiBoClient("You ClientId", "You ClientScrert", "You Callback Url");&#xD;
            m_oauthClients["qq"] = new OpenPlatform.OAuthClient.TencentQQClient("You ClientId", "You ClientScrert", "You Callback Url");&#xD;
            m_oauthClients["taobao"] = new OpenPlatform.OAuthClient.TaoBaoClient("You ClientId", "You ClientScrert", "You Callback Url");&#xD;
&#xD;
            //测试&#xD;
            OAuthTest("sinaweibo");&#xD;
            //OAuthTest("qq");&#xD;
            //OAuthTest("taobao");&#xD;
&#xD;
            Console.ReadKey(true);&#xD;
        }&#xD;
&#xD;
        private static void OAuthTest(String platformCode)&#xD;
        {&#xD;
            String authorizeUrl = String.Empty;&#xD;
            if (String.IsNullOrEmpty(platformCode)) platformCode = "sinaweibo";&#xD;
&#xD;
            Console.WriteLine("OpenPlatform Request For " + platformCode);&#xD;
            Console.WriteLine("");&#xD;
&#xD;
            IOAuthClient oauthClient = m_oauthClients[platformCode];&#xD;
            oauthClient.Option.State = platformCode;&#xD;
&#xD;
            //第一步：获取开放平台授权地址&#xD;
            authorizeUrl = m_oauthClients[platformCode].GetAuthorizeUrl(ResponseType.Code);&#xD;
            Console.WriteLine("Step 1 - OAuth2.0 for Redirect AuthorizeUrl: ");&#xD;
            Console.WriteLine(authorizeUrl);&#xD;
&#xD;
            //第二步：打开IE浏览器获取Code&#xD;
            Process p = new Process();&#xD;
            ProcessStartInfo psi = new ProcessStartInfo();&#xD;
            psi.Arguments = authorizeUrl;&#xD;
            psi.FileName = "C:\\Program Files\\Internet Explorer\\iexplore.exe";&#xD;
            p.StartInfo = psi;&#xD;
            p.Start();&#xD;
&#xD;
            Console.WriteLine("");&#xD;
            Console.WriteLine("OAuth2.0 Input Server Response Code");&#xD;
            String code = Console.ReadLine();&#xD;
&#xD;
            //第三步：获取开放平台授权令牌&#xD;
            oauthClient = m_oauthClients[platformCode];&#xD;
            AuthToken accessToken = oauthClient.GetAccessTokenByAuthorizationCode(code);&#xD;
            if (accessToken != null)&#xD;
            {&#xD;
                Console.WriteLine("");&#xD;
                Console.WriteLine("Step 2 - OAuth2.0 for AccessToken: " + accessToken.AccessToken);&#xD;
                //输出原始响应数据&#xD;
                Console.WriteLine("GetAccessToken Raw Response : ");&#xD;
                Console.WriteLine(oauthClient.Token.TraceInfo);&#xD;
&#xD;
                //第四步：调用开放平台API，获取开放平台用户信息&#xD;
                dynamic oauthProfile = oauthClient.User.GetUserInfo();&#xD;
&#xD;
                //输出解析出来的用户昵称&#xD;
                Console.WriteLine("");&#xD;
                Console.WriteLine("Step 3 - Call Open API UserInfo: ");&#xD;
                Console.WriteLine("UserInfo Nickname: " + oauthClient.Token.User.Nickname);&#xD;
                //输出原始响应数据&#xD;
                Console.WriteLine("GetUserInfo Raw Response : ");&#xD;
                Console.WriteLine(oauthClient.Token.TraceInfo);&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
}&#xD;
&lt;/pre&gt;&#xD;
&lt;/div&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 16px;"&gt;三。 下面给出几张测试的截图：&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;SianWeiBo Oauth2.0&lt;br /&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/p&gt;&#xD;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/12069/201411/281205068719188.jpg" alt="" /&gt;&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;br /&gt;QQ OAuth2.0&lt;br /&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/12069/201411/281207527151124.jpg" alt="" /&gt;&lt;/p&gt;&#xD;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xD;
&lt;p&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;br /&gt;TaoBao OAuth2.0&lt;br /&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;br /&gt;&lt;img src="http://images.cnitblog.com/blog/12069/201411/281209092775167.jpg" alt="" /&gt;&lt;/p&gt;</string>